<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"

	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    	http://www.springframework.org/schema/util
    	http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<!-- HTTP security configurations -->
	<http use-expressions="true">

		<!--
			auto-config="true" <form-login
			login-processing-url="/static/j_spring_security_check"
			login-page="/login" authentication-failure-url="/login?login_error=t"
			/>
		-->
		<!-- Configure these elements to secure URIs in your application -->
		<!--
			<intercept-url pattern="/secure" access="hasRole('ROLE_USER')" />
			<intercept-url pattern="/member/**" access="isAuthenticated()" />
		-->
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/static/**" access="permitAll" />
		<intercept-url pattern="/calendar/**" access="permitAll" />
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" />

		<openid-login user-service-ref="userServiceImpl">
			<attribute-exchange>
				<openid-attribute name="email"
					type="http://axschema.org/contact/email" required="true" />
				<openid-attribute name="name"
					type="http://schema.openid.net/namePerson/friendly" />
			</attribute-exchange>
		</openid-login>
		<logout logout-url="/static/j_spring_security_logout" />
		<custom-filter after="FORM_LOGIN_FILTER" ref="OAuthProcessingFilter" />
		<remember-me token-repository-ref="tokenRepo"
			user-service-ref="userServiceImpl" />
	</http>

	<!-- Configure Authentication mechanism -->
	<authentication-manager alias="authenticationManager" />
	
	<!-- token repository for remember me service -->
	<beans:bean id="tokenRepo"
		class="org.springframework.security.web.authentication.rememberme.InMemoryTokenRepositoryImpl" />


	<!--  User service for openid-login -->
	<beans:bean class="com.owaconnector.service.impl.UserServiceImpl"
		id="userServiceImpl" />

	<!--
		OAuth processing filter, will obtain authorized request token from
		session and authorize it.
	-->
	<beans:bean id="OAuthProcessingFilter"
		class="com.owaconnector.security.oauth.OAuthProcessingFilter">
		<beans:property name="consumerKey" value="www.owaconnector.com" />
		<beans:property name="consumerSecret" value="D/X/l1ylPrpDR+G+E0JyTMP4" />
		<beans:property name="requestTokenURL"
			value="https://www.google.com/accounts/OAuthGetRequestToken" />
		<beans:property name="userAuthorizationURL"
			value="https://www.google.com/accounts/OAuthAuthorizeToken" />
		<beans:property name="accessTokenURL"
			value="https://www.google.com/accounts/OAuthGetAccessToken" />
		<beans:property name="callbackURL" value="/callback" />

	</beans:bean>


	


</beans:beans>